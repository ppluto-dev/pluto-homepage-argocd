apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
  name: eg
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: eg
spec:
  gatewayClassName: eg
  listeners:
    - name: http
      protocol: HTTP
      port: 8080

---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: eg2
spec:
  gatewayClassName: eg
  listeners:
    - name: http-web
      port: 80
      protocol: HTTP
#       allowedRoutes:
#         namespaces:
#           from: All
---
kind: HTTPRoute
apiVersion: gateway.networking.k8s.io/v1beta1
metadata:
  name: http-web-route
spec:
  parentRefs:
    - name: eg2
      sectionName: http-web
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: ppluto-homepage-service
          port: 80

---
kind: Service
apiVersion: v1
metadata:
  name: ppluto-homepage-service
spec:
  selector:
    app: ppluto-homepage
  ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 3000
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ppluto-homepage
spec:
  selector:
    matchLabels:
      app: ppluto-homepage
  replicas: 2
  template:
    metadata:
      labels:
        app: ppluto-homepage
    spec:
      containers:
        - name: ppluto-homepage
          image: registry.gitlab.com/ppluto-dev/ppluto-main/homepage:UNSPECIFIED
          ports:
            - containerPort: 3000
      imagePullSecrets:
        - name: gitlab-container-registry

---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: backend
spec:
  parentRefs:
    - name: eg
  rules:
    - backendRefs:
        - group: ""
          kind: Service
          name: backend
          port: 3000
          weight: 1
      matches:
        - path:
            type: PathPrefix
            value: /

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    app: backend
    service: backend
spec:
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
      version: v1
  template:
    metadata:
      labels:
        app: backend
        version: v1
    spec:
      serviceAccountName: backend
      containers:
        - image: gcr.io/k8s-staging-ingressconformance/echoserver:v20220815-e21d1a4
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 3000
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
